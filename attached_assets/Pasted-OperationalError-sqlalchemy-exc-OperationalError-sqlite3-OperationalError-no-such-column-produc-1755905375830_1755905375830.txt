OperationalError
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such column: products.category
[SQL: SELECT count(*) AS count_1 
FROM (SELECT products.id AS products_id, products.name AS products_name, products.description AS products_description, products.category AS products_category, products.brand AS products_brand, products.supplier AS products_supplier, products.barcode AS products_barcode, products.qr_code AS products_qr_code, products.purchase_price AS products_purchase_price, products.selling_price AS products_selling_price, products.initial_stock AS products_initial_stock, products.current_stock AS products_current_stock, products.minimum_stock AS products_minimum_stock, products.maximum_stock AS products_maximum_stock, products.unit AS products_unit, products.weight AS products_weight, products.dimensions AS products_dimensions, products.expiry_date AS products_expiry_date, products.profit AS products_profit, products.total_sold AS products_total_sold, products.total_revenue AS products_total_revenue, products.is_active AS products_is_active, products.created_at AS products_created_at, products.updated_at AS products_updated_at 
FROM products) AS anon_1]
(Background on this error at: https://sqlalche.me/e/20/e3q8)

Traceback (most recent call last)
File "/home/runner/workspace/.pythonlibs/lib/python3.12/site-packages/sqlalchemy/engine/base.py", line 1967, in _exec_single_context
self.dialect.do_execute(
^
File "/home/runner/workspace/.pythonlibs/lib/python3.12/site-packages/sqlalchemy/engine/default.py", line 951, in do_execute
cursor.execute(statement, parameters)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
The above exception was the direct cause of the following exception:
File "/home/runner/workspace/.pythonlibs/lib/python3.12/site-packages/flask/app.py", line 1536, in __call__
return self.wsgi_app(environ, start_response)
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
File "/home/runner/workspace/.pythonlibs/lib/python3.12/site-packages/werkzeug/middleware/proxy_fix.py", line 183, in __call__
return self.app(environ, start_response)
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
File "/home/runner/workspace/.pythonlibs/lib/python3.12/site-packages/flask/app.py", line 1514, in wsgi_app
response = self.handle_exception(e)
           ^^^^^^^^^^^^^^^^^^^^^^^^
File "/home/runner/workspace/.pythonlibs/lib/python3.12/site-packages/flask/app.py", line 1511, in wsgi_app
response = self.full_dispatch_request()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
File "/home/runner/workspace/.pythonlibs/lib/python3.12/site-packages/flask/app.py", line 919, in full_dispatch_request
rv = self.handle_user_exception(e)
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
File "/home/runner/workspace/.pythonlibs/lib/python3.12/site-packages/flask/app.py", line 917, in full_dispatch_request
rv = self.dispatch_request()
     ^^^^^^^^^^^^^^^^^^^^^^^
File "/home/runner/workspace/.pythonlibs/lib/python3.12/site-packages/flask/app.py", line 902, in dispatch_request
return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
File "/home/runner/workspace/app.py", line 385, in decorated_function
return f(*args, **kwargs)
       ^^^^^^^^^^^^^^^^^^
File "/home/runner/workspace/app.py", line 769, in dashboard
'total_products': Product.query.count(),
                  ^^^^^^^^^^^^^^^^^^^^^
File "/home/runner/workspace/.pythonlibs/lib/python3.12/site-packages/sqlalchemy/orm/query.py", line 3146, in count
self._legacy_from_self(col).enable_eagerloads(False).scalar()
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
File "/home/runner/workspace/.pythonlibs/lib/python3.12/site-packages/sqlalchemy/orm/query.py", line 2835, in scalar
ret = self.one()
      ^^^^^^^^^^
File "/home/runner/workspace/.pythonlibs/lib/python3.12/site-packages/sqlalchemy/orm/query.py", line 2808, in one
return self._iter().one()  # type: ignore
       ^^^^^^^^^^^^
File "/home/runner/workspace/.pythonlibs/lib/python3.12/site-packages/sqlalchemy/orm/query.py", line 2857, in _iter
result: Union[ScalarResult[_T], Result[_T]] = self.session.execute(
                                              
File "/home/runner/workspace/.pythonlibs/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 2365, in execute
return self._execute_internal(
       
File "/home/runner/workspace/.pythonlibs/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 2251, in _execute_internal
result: Result[Any] = compile_state_cls.orm_execute_statement(
                      
File "/home/runner/workspace/.pythonlibs/lib/python3.12/site-packages/sqlalchemy/orm/context.py", line 306, in orm_execute_statement
result = conn.execute(
         
File "/home/runner/workspace/.pythonlibs/lib/python3.12/site-packages/sqlalchemy/engine/base.py", line 1419, in execute
return meth(
       
File "/home/runner/workspace/.pythonlibs/lib/python3.12/site-packages/sqlalchemy/sql/elements.py", line 526, in _execute_on_connection
return connection._execute_clauseelement(
       
File "/home/runner/workspace/.pythonlibs/lib/python3.12/site-packages/sqlalchemy/engine/base.py", line 1641, in _execute_clauseelement
ret = self._execute_context(
      
File "/home/runner/workspace/.pythonlibs/lib/python3.12/site-packages/sqlalchemy/engine/base.py", line 1846, in _execute_context
return self._exec_single_context(
       
File "/home/runner/workspace/.pythonlibs/lib/python3.12/site-packages/sqlalchemy/engine/base.py", line 1986, in _exec_single_context
self._handle_dbapi_exception(
^
File "/home/runner/workspace/.pythonlibs/lib/python3.12/site-packages/sqlalchemy/engine/base.py", line 2355, in _handle_dbapi_exception
raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
File "/home/runner/workspace/.pythonlibs/lib/python3.12/site-packages/sqlalchemy/engine/base.py", line 1967, in _exec_single_context
self.dialect.do_execute(
^
File "/home/runner/workspace/.pythonlibs/lib/python3.12/site-packages/sqlalchemy/engine/default.py", line 951, in do_execute
cursor.execute(statement, parameters)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such column: products.category
[SQL: SELECT count(*) AS count_1
FROM (SELECT products.id AS products_id, products.name AS products_name, products.description AS products_description, products.category AS products_category, products.brand AS products_brand, products.supplier AS products_supplier, products.barcode AS products_barcode, products.qr_code AS products_qr_code, products.purchase_price AS products_purchase_price, products.selling_price AS products_selling_price, products.initial_stock AS products_initial_stock, products.current_stock AS products_current_stock, products.minimum_stock AS products_minimum_stock, products.maximum_stock AS products_maximum_stock, products.unit AS products_unit, products.weight AS products_weight, products.dimensions AS products_dimensions, products.expiry_date AS products_expiry_date, products.profit AS products_profit, products.total_sold AS products_total_sold, products.total_revenue AS products_total_revenue, products.is_active AS products_is_active, products.created_at AS products_created_at, products.updated_at AS products_updated_at
FROM products) AS anon_1]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
The debugger caught an exception in your WSGI application. You can now look at the traceback which led to the error.
To switch between the interactive traceback and the plaintext one, you can click on the "Traceback" headline. From the text traceback you can also create a paste of it.

Brought to you by DON'T PANIC, your friendly Werkzeug powered traceback inte